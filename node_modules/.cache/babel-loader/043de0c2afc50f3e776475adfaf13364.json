{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = url => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const resp = await axios.get(url);\n        const data = await (resp === null || resp === void 0 ? void 0 : resp.data);\n        setData(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    isLoading,\n    apiData,\n    serverError\n  };\n};\n\n_s(useFetch, \"a8ElLzCvkLck+cWkUMDw7c1EPRU=\");","map":{"version":3,"sources":["C:/Users/manuc/Desktop/crypto-app/src/routes/Coin.jsx"],"names":["useState","useEffect","axios","useFetch","url","loading","setLoading","data","setData","error","setError","setIsLoading","fetchData","resp","get","err","isLoading","apiData","serverError"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,IAAI,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUV,GAAV,CAAnB;AACA,cAAMG,IAAI,GAAG,OAAMM,IAAN,aAAMA,IAAN,uBAAMA,IAAI,CAAEN,IAAZ,CAAb;AAEAC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAND,CAME,OAAMS,GAAN,EAAW;AACXL,QAAAA,QAAQ,CAACK,GAAD,CAAR;AACAT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAXD;;AAaAM,IAAAA,SAAS;AACV,GAhBQ,EAgBN,CAACR,GAAD,CAhBM,CAAT;AAkBA,SAAO;AAAEY,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,GAAP;AACD,CAxBD;;GAAMf,Q","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetch = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchData = async () => {\r\n      try {\r\n        const resp = await axios.get(url);\r\n        const data = await resp?.data;\r\n\r\n        setData(data);\r\n        setLoading(false);\r\n      } catch(err) {\r\n        setError(err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { isLoading, apiData, serverError };\r\n};"]},"metadata":{},"sourceType":"module"}