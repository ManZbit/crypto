{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manuc\\\\Desktop\\\\crypto-app-xd\\\\src\\\\Components\\\\Coins.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Coins = _ref => {\n  let {\n    name,\n    rank,\n    icon,\n    price,\n    symbol,\n    priceChange1d,\n    priceChange1w,\n    marketCap\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: rank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"coin__img\",\n              src: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), \" \", name, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"coin__symbol\",\n              children: [\" \", symbol, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"coin__price\",\n              children: [\"$\", price.toLocaleString(undefined, {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: priceChange1d < 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"coin-percent red\",\n              children: [priceChange1d.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"coin-percent green\",\n              children: [priceChange1d.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", priceChange1w < 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"coin-percent red\",\n              children: [priceChange1w.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"coin-percent green\",\n              children: [priceChange1w.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"market__cap\",\n              children: [\"$ \", Math.round(marketCap * 100 / 100).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Coins;\nexport default Coins;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coins\");","map":{"version":3,"sources":["C:/Users/manuc/Desktop/crypto-app-xd/src/Components/Coins.jsx"],"names":["React","Coins","name","rank","icon","price","symbol","priceChange1d","priceChange1w","marketCap","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","toFixed","Math","round"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,QASR;AAAA,MATS;AACbC,IAAAA,IADa;AAEbC,IAAAA,IAFa;AAGbC,IAAAA,IAHa;AAIbC,IAAAA,KAJa;AAKbC,IAAAA,MALa;AAMbC,IAAAA,aANa;AAObC,IAAAA,aAPa;AAQbC,IAAAA;AARa,GAST;AACJ,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAA,6BACE;AAAA,+BACE;AAAA,kCACE;AAAA,sBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAA2B,cAAA,GAAG,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBADF,OAC4CF,IAD5C,eAEE;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA,8BAAiCI,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC,aAAb;AAAA,8BAEGD,KAAK,CAACK,cAAN,CAAqBC,SAArB,EAAgC;AAC/BC,gBAAAA,qBAAqB,EAAE,CADQ;AAE/BC,gBAAAA,qBAAqB,EAAE;AAFQ,eAAhC,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eAeE;AAAA,sBACGN,aAAa,GAAG,CAAhB,gBACC;AAAG,cAAA,SAAS,EAAC,kBAAb;AAAA,yBAAiCA,aAAa,CAACO,OAAd,CAAsB,CAAtB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAGC;AAAG,cAAA,SAAS,EAAC,oBAAb;AAAA,yBACGP,aAAa,CAACO,OAAd,CAAsB,CAAtB,CADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAfF,eAwBE;AAAA,uBACG,GADH,EAEGN,aAAa,GAAG,CAAhB,gBACC;AAAG,cAAA,SAAS,EAAC,kBAAb;AAAA,yBAAiCA,aAAa,CAACM,OAAd,CAAsB,CAAtB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAGC;AAAG,cAAA,SAAS,EAAC,oBAAb;AAAA,yBACGN,aAAa,CAACM,OAAd,CAAsB,CAAtB,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAkCE;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC,aAAb;AAAA,+BACKC,IAAI,CAACC,KAAL,CAAYP,SAAS,GAAG,GAAb,GAAoB,GAA/B,EAAoCC,cAApC,EADL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CA1DD;;KAAMT,K;AA4DN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\n\nconst Coins = ({\n  name,\n  rank,\n  icon,\n  price,\n  symbol,\n  priceChange1d,\n  priceChange1w,\n  marketCap,\n}) => {\n  return (\n    <div className=\"card\">\n      <table>\n        <tbody>\n          <tr>\n            <td>{rank}</td>\n            <td>\n              <img className=\"coin__img\" src={icon} /> {name}\n              <span className=\"coin__symbol\"> {symbol} </span>\n            </td>\n            <td>\n              <p className=\"coin__price\">\n                $\n                {price.toLocaleString(undefined, {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2,\n                })}\n              </p>\n            </td>\n            <td>\n              {priceChange1d < 0 ? (\n                <p className=\"coin-percent red\">{priceChange1d.toFixed(2)}%</p>\n              ) : (\n                <p className=\"coin-percent green\">\n                  {priceChange1d.toFixed(2)}%\n                </p>\n              )}\n            </td>\n            <td>\n              {\" \"}\n              {priceChange1w < 0 ? (\n                <p className=\"coin-percent red\">{priceChange1w.toFixed(2)}%</p>\n              ) : (\n                <p className=\"coin-percent green\">\n                  {priceChange1w.toFixed(2)}%\n                </p>\n              )}\n            </td>\n            <td>\n              <p className=\"market__cap\">\n                $ {Math.round((marketCap * 100) / 100).toLocaleString()}\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Coins;\n"]},"metadata":{},"sourceType":"module"}